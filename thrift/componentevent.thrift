namespace * ophan.thrift.componentEvent
namespace cocoa GLAOphanThriftComponentEvent

include "product.thrift"
include "abtest.thrift"

/**
* Specific actions that can be taken against a Component.
*
* Aim to use one of the existing entries here, or create a new one. The examples in the comments
* are not intended to be exhaustive.
*
* If a general "click" event is enough, consider using the "value" field in ComponentEvent
* to hold any additional information relating to the click.
**/
enum Action {
    /**
    * The component was inserted into its container (e.g. a web page or view in an app)
    **/
    INSERT = 1

    /**
    * The component was in view on screen
    **/
    VIEW = 2

    /**
    * The component was expanded (e.g. "see more").
    * Not a navigation away to another page
    **/
    EXPAND = 3

    /**
    * A "like", thumbs up, etc.
    **/
    LIKE = 4

    /**
    * A "dislike", thumbs down, etc.
    **/
    DISLIKE = 5

    /**
    * A subscription to a service, newsletter, etc.
    **/
    SUBSCRIBE = 6

    /**
    * Selection of an answer in a quiz
    **/
    ANSWER = 7

    /**
    * A vote in a poll
    **/
    VOTE = 8

    /**
    * A single click on the component which is not covered by
    * any of the existing Actions.
    **/
    CLICK = 9

}

/**
* The different types of component that can be rendered
**/
enum ComponentType {

    READERS_QUESTIONS_ATOM = 1

    QANDA_ATOM = 2

    PROFILE_ATOM = 3

    GUIDE_ATOM = 4

    TIMELINE_ATOM = 5

    NEWSLETTER_SUBSCRIPTION = 6

    SURVEYS_QUESTIONS = 7

    ACQUISITIONS_EPIC = 8

    ACQUISITIONS_ENGAGEMENT_BANNER = 9

    ACQUISITIONS_THANK_YOU_EPIC = 10

    ACQUISITIONS_HEADER = 11

    ACQUISITIONS_FOOTER = 12

    ACQUISITIONS_INTERACTIVE_SLICE = 13

    ACQUISITIONS_NUGGET = 14

    ACQUISITIONS_STANDFIRST = 15

    ACQUISITIONS_THRASHER = 16

    ACQUISITIONS_EDITORIAL_LINK = 17

    ACQUISITIONS_MANAGE_MY_ACCOUNT = 18

    ACQUISITIONS_BUTTON = 19

    ACQUISITIONS_OTHER = 20
    
    APP_ADVERT = 21
    
    APP_AUDIO = 22
    
    APP_BUTTON = 23
    
    APP_CARD = 24
    
    APP_CROSSWORDS = 25
    
    APP_ENGAGEMENT_BANNER = 26

    APP_EPIC = 27
    
    APP_GALLERY = 28
    
    APP_LINK = 29
    
    APP_NAVIGATION_ITEM = 30
    
    APP_SCREEN = 31
    
    APP_THRASHER = 32
    
    APP_VIDEO = 33

    AUDIO_ATOM = 34

    CHART_ATOM = 35

    ACQUISITIONS_MERCHANDISING = 36

    ACQUISITIONS_HOUSE_ADS = 37

}

// Struct name appended with V2 as otherwise the classes generated by update_avro_schema.sh
// in ophan-data-lake would not compile since the Component would be permanently hidden
// by the ophan.thrift.event.Component import.
struct ComponentV2 {

    1: required ComponentType componentType

    /**
    * An ID that can be used to distinguish different instances of a given ComponentType
    **/
    2: optional string id

    /**
    * The products related to the component
    *
    * e.g. a banner with two buttons, one asking for people to become Supporters
    * and one asking for contributions would contain `CONTRIBUTION` and `SUPPORTER`
    **/
    3: required set<product.Product> products

    /**
    * An optional identifier for the campaign the component was used in
    **/
    4: optional string campaignCode

    /**
    * Additional labels relating to the component
    **/
    5: required set<string> labels

}

/**
* An event representing an action taken against a component on the web or apps.
**/
struct ComponentEvent {

    /**
    * The component where the action happened
    **/
    1: required ComponentV2 component

    /**
    * The action that took place
    **/
    2: required Action action

    /**
    * Any additional data on the event, e.g. further information on a "click" event
    **/
    3: optional string value

    /**
    * A unique identifier for the component event e.g. a UUID
    **/
    4: optional string id

    /**
    * If the event was triggered as part of an A/B test, this identifies the test and variant.
    * Though a given pageview may have multiple A/B test participations, a component
    * event can only be associated with a single test.
    **/
    5: optional abtest.AbTest abTest
}
