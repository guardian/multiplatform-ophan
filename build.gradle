plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.40'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    //id 'org.jetbrains.kotlin.native.cocoapods' version '1.3.40'
}

repositories {
    mavenCentral()
    jcenter()
}

kotlin {
    jvm()
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    iosX64("ios") {
        binaries {
            framework {
                baseName = "MultiplatformOphan"
            }
        }
    }
    /*
    iosArm64("iosarm") {
        binaries {
            framework()
        }
    }
    */

    /*
    cocoapods {
        summary = "A multiplatform client library for Ophan"
        homepage = "https://github.com/guardian"
    }
    */

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.2.2"
                implementation "io.ktor:ktor-client-core:1.2.2"
                implementation "com.soywiz.korlibs.klock:klock:1.5.0"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.2"
                implementation "io.ktor:ktor-client-android:1.2.2"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.2.2"
                implementation "io.ktor:ktor-client-ios:1.2.2"
            }
        }
        iosTest {
        }
    }
}

/*
publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.gu.android'
            artifactId = 'multiplatform-ophan'
            version = '0.1.0'

            from components.java
        }
    }
}
*/

/*
task iosTest {
    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
    dependsOn kotlin.targets.ios.binaries.getTest('DEBUG').linkTaskName
    group = JavaBasePlugin.VERIFICATION_GROUP
    description = "Runs tests for target 'ios' on an iOS simulator"

    doLast {
        def binary = kotlin.targets.ios.binaries.getTest('DEBUG').outputFile
        exec {
            commandLine 'xcrun', 'simctl', 'spawn', device, binary.absolutePath
        }
    }
}
*/

task generateThriftModels(type: Exec) {
    executable 'java'
    args = [
            '-jar', 'thrifty-compiler.jar',
            '--lang', 'kotlin',
            '--omit-generated-annotations',
            '--list-type=kotlin.collections.ArrayList',
            '--set-type=kotlin.collections.LinkedHashSet',
            '--out', 'src/commonMain/kotlin',
            '--path', '../android-news-app/ophan/event-model/src/main/thrift/',
            '../android-news-app/ophan/event-model/src/main/thrift/nativeapp.thrift'
    ]
}

configurations {
    compileClasspath
}

apply from: 'publish.gradle'